$if: '(event.event != "push") && (event.event != "tag")'
then:
  taskId: ${taskcluster.taskId}
  provisionerId: ${taskcluster.docker.provisionerId}
  workerType: ${taskcluster.docker.workerType}
  taskGroupId: ${taskcluster.taskGroupId}
  schedulerId: ${taskcluster.schedulerId}
  dependencies:
    $map: { $eval: build.dependencies }
    each(b):
      $eval: as_slugid(b)
  created: { $fromNow: '0 sec' }
  deadline: { $fromNow: '1 day' }
  expires: { $fromNow: '7 days' }

  extra:
    github:
      { $eval: taskcluster.github_events.pull_request }

  payload:
    maxRunTime: { $eval: to_int(build.maxRunTime) }
    image: ${build.docker_image}

    env:
      NUM_DEVICES: 0
      CUDA_VISIBLE_DEVICES: ''
      MARIAN: '${system.homedir.linux}/marian-dev/md/build'

    command:
      - "/bin/bash"
      - "--login"
      - "-cxe"
      - $let:
          extraSystemSetup: { $eval: strip(str(system.system_setup.linux)) }
        in: >
          apt-get -qq update &&
          ${extraSystemSetup} &&
          adduser --system --home ${system.homedir.linux} ${system.username} &&
          cd ${system.homedir.linux} &&
          echo -e "#!/bin/bash\nset -xe\n env && id && mkdir ~/marian-dev/ && git clone --recurse-submodules --quiet ${event.head.repo.url} ~/marian-dev/md/ && cd ~/marian-dev/md && git checkout --quiet ${event.head.sha}" > /tmp/clone.sh && chmod +x /tmp/clone.sh &&
          sudo -H -u ${system.username} /bin/bash /tmp/clone.sh &&
          cd ${system.homedir.linux}/marian-dev/md &&
          sudo -H -u ${system.username} --preserve-env /bin/bash ${system.homedir.linux}/marian-dev/md/${system.scripts.build.linux} &&
          cd ${system.homedir.linux}/marian-dev/md/${system.submodule} &&
          make install &&
          sudo -H -u ${system.username} --preserve-env /bin/bash ${build.args.tests_cmdline}

    artifacts:
      "public":
        type: "directory"
        path: "/tmp/artifacts/"
        expires: { $fromNow: '7 days' }

  metadata:
    name: ${build.metadata.name}
    description: ${build.metadata.description}
    owner: ${event.head.user.email}
    source: ${event.head.repo.url}
